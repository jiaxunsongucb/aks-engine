{
    "apiVersion": "vlabs",
    "location": "redmond",
    "properties": {
        "orchestratorProfile": {
            "orchestratorType": "Kubernetes",
            "orchestratorRelease": "1.16",
            "orchestratorVersion": "1.16.14",
            "kubernetesConfig": {
                "customHyperkubeImage": "upstream.azurecr.io/oss/kubernetes/hyperkube:v1.16.14-azs",
                "components": [
                    {
                        "name": "cluster-init",
                        "enabled": true,
                        "data": ""
                    }
                ],
                "apiServerConfig": {
                    "--event-ttl": "24h0m0s"
                },
                "cloudProviderBackoffMode": ""
            }
        },
        "masterProfile": {
            "count": 3,
            "subjectAltNames": null,
            "vmSize": "Standard_DS2_v2",
            "oauthEnabled": false,
            "preProvisionExtension": null,
            "extensions": null,
            "distro": "aks-ubuntu-16.04",
            "availabilityProfile": "",
            "platformUpdateDomainCount": null
        },
        "agentPoolProfiles": [
            {
                "name": "linuxpool",
                "count": 3,
                "vmSize": "Standard_DS3_v2",
                "availabilityProfile": "AvailabilitySet",
                "storageProfile": "",
                "distro": "aks-ubuntu-16.04",
                "acceleratedNetworkingEnabled": false,
                "fqdn": "",
                "preProvisionExtension": null,
                "extensions": null,
                "platformUpdateDomainCount": null
            }
        ],
        "linuxProfile": {
            "adminUsername": "azureuser",
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5+ts+lWyJq6MjbJdk/tIQ2l4h19HVCGJ0YmbsrYGqIZBTgoXW/y8oy2q/kjjRD6bF4ajEoEvBGej/OhkV2PpRRcWolobOM6neM2q/9pSl0LSr+w9VpzBNk9ghXZuJ/xaVzahqrL/wSc1LgHpWwQTnBVAiYNgDH67GHBQx5C56VTfBPCRjf8BZ6a/Ob46w8lPjRGR2ggq3aYLYTGWJ6zfam0VeeyssxyH/BopKGiIMRtv+xydFaiRqignHY2qd0Vg8FMwkg1rFOf2MhIzTrgR6uMJK29mgMZoWlVtckXaH4FgIxBtXYUDjJnOPzb6HpVqibxzKQtNx/s59bdO+fub/ n31r1205\\azurestackadmin@n31r1205-DVM"
                    }
                ]
            }
        },
        "servicePrincipalProfile": {
            "clientId": "",
            "secret": ""
        },
        "featureFlags": {
            "enableTelemetry": true
        },
        "customCloudProfile": {
            "identitySystem": "adfs",
            "portalURL": "https://portal.redmond.ext-n31r1205.masd.stbtest.microsoft.com"
        }
    }
}